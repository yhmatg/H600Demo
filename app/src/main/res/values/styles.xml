<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:textColorSecondary">#ffffff</item>
    </style>

    <!-- Toolbar相关主题 -->
    <style name="MyToolbarTheme" parent="ThemeOverlay.AppCompat.Dark.ActionBar">
        <item name="android:background">?attr/colorPrimary</item>
        <item name="android:actionOverflowButtonStyle">@style/OverFlowIcon</item>
    </style>

    <!-- 溢出菜单的icon -->
    <style name="OverFlowIcon" parent="Widget.AppCompat.ActionButton.Overflow">
        <item name="android:src">@drawable/info</item>
    </style>

    <!--设置溢出菜单样式 -->
    <style name="OverFlowMenuTheme" parent="Widget.AppCompat.PopupMenu.Overflow">
        <!-- 设置Menu菜单的背景色 -->
        <item name="android:background">@android:color/white</item>
        <!-- 设置Menu菜单的字体颜色 -->
        <item name="android:textColor">@android:color/black</item>
        <item name="android:textSize">16sp</item>
        <!-- 设置Menu窗口不覆盖Toolbar视图 -->
        <item name="overlapAnchor">false</item>
    </style>

    <!--设置菜单Title的文本外观 -->
    <style name="MyToolbarTheme.Title" parent="TextAppearance.AppCompat.Title">
        <item name="android:textSize">24sp</item>
        <item name="android:textColor">@android:color/white</item>
    </style>

    <!--设置菜单SubTitle的文本外观 -->
    <style name="MyToolbarTheme.SubTitle" parent="TextAppearance.AppCompat.Title">
        <item name="android:textSize">12sp</item>
        <item name="android:textColor">@android:color/white</item>
    </style>

    <style name="ToolbarPopupTheme" parent="@style/ThemeOverlay.AppCompat.Light">
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item><!--新增一个item，用于控制menu-->
    </style>
    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <item name="overlapAnchor">false</item>  <!--把该属性改为false即可使menu位置位于toolbar之下-->
    </style>

    <style name="CustomRepairCheckboxTheme" parent="@android:style/Widget.CompoundButton.CheckBox">
        <item name="android:button">@drawable/choose_checkbox</item>
    </style>

</resources>
